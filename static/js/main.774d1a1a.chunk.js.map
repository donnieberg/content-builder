{"version":3,"sources":["redux/constants.js","components/Accordion.js","redux/reducers.js","redux/actionTypes.js","redux/store.js","components/Tabs.js","components/Canvas.js","components/Header.js","App.js","redux/actions.js","index.js"],"names":["ALL_COMPONENTS","id","tileIcon","component","Accordion","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","expandedPanels","event","data","setState","objectSpread","defineProperty","_this2","react_default","a","createElement","accordion","className","children","map","item","i","panel","expanded","key","onTogglePanel","togglePanel","summary","label","content","Component","initialState","test","regions","canvas","header","components","panelIndex","main","sidebar","rootReducer","arguments","length","undefined","action","type","region","newRegionData","store","createStore","tabsContent","Tabs","tabs","tabs_panel","addComponentOptions","value","rightIcon","category","name","Canvas","componentData","concat","ReactComponent","aria-label","renderComponents","menu_dropdown","align","options","button_trigger","components_button","Header","button_group","assistiveText","icon","iconCategory","iconName","iconSize","iconVariant","onClick","console","log","variant","iconPosition","size","inverse","renderHeaderActions","renderHeaderViews","renderHeaderSave","ConnectedApp","addComponent","e","targetId","target","componentToAdd","find","x","stateCopy","assign","push","components_Header","components_Canvas","App","connect","dispatch","canvasRegion","render","es","icon_settings","iconPath","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.774d1a1a.chunk.js","sourcesContent":["export const HEADER = 'HEADER';\nexport const COMPONENT_PANEL = 'COMPONENT_PANEL';\nexport const CANVAS = 'CANVAS';\nexport const PROPERTY_PANEL = 'PROPERTY_PANEL';\n\nexport const ALL_COMPONENTS = [\n  { id: 'chatter', tileIcon: 'chat', component: 'Chatter' }\n];\n","import React, { Component } from 'react';\nimport {\n  Accordion as AccordionWrapper,\n  AccordionPanel\n} from '@salesforce/design-system-react';\n\n// const accordionItems = [\n//   {\n//     id: '1',\n//     summary: 'Accordion Summary',\n//     details: 'Accordion details - A',\n//   },\n//   {\n//     id: '2',\n//     summary: 'Accordion Summary',\n//     details: 'Accordion details - B',\n//   },\n//   {\n//     id: '3',\n//     summary: 'Accordion Summary',\n//     details: 'Accordion details - C',\n//   },\n// ];\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      expandedPanels: {},\n    };\n  }\n\n  togglePanel(event, data) {\n    this.setState((state) => ({\n      ...state,\n      expandedPanels: {\n        ...state.expandedPanels,\n        [data.id]: !state.expandedPanels[data.id],\n      },\n    }));\n  }\n\n  render() {\n    return (\n      <AccordionWrapper id=\"base-example-accordion\" className=\"white-bkgd\">\n        {this.props.children.map((item, i) => (\n          <AccordionPanel\n            expanded={!!this.state.expandedPanels[item.id]}\n            id={item.id}\n            key={item.id}\n            onTogglePanel={(event) => this.togglePanel(event, item)}\n            summary={item.label}\n          >\n            {item.content}\n          </AccordionPanel>\n        ))}\n      </AccordionWrapper>\n    );\n  }\n}\n\nexport default Accordion;\n","import {\n  HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL\n} from './constants';\n\nimport {\n  ADD_COMPONENT\n} from './actionTypes';\n\nimport Accordion from '../components/Accordion';\n\nconst initialState = {\n  test: \"test\",\n  regions: [HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL],\n  canvas: {\n    header: {\n      components: [\n        {\n          component: Accordion,\n          children: [\n            {\n              panelIndex: 0,\n              content: 'Panel 1',\n              label: 'Label 1',\n            }, {\n              panelIndex: 1,\n              content: 'Panel 2',\n              label: 'Label 2',\n            }, {\n              panelIndex: 2,\n              content: 'Panel 3',\n              label: 'Label 3',\n            }\n          ]\n        }\n      ],\n    },\n    main: {\n      components: [],\n    },\n    sidebar: {\n      components: [],\n    },\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case ADD_COMPONENT:\n      return {\n        ...state,\n        canvas: {\n          ...state.canvas,\n          [action.region]: action.newRegionData\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","export const ADD_COMPONENT = \"ADD_COMPONENT\";","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","import React, { Component } from 'react';\nimport { Tabs as TabsWrapper, TabsPanel } from '@salesforce/design-system-react'\n\nconst tabsContent = [\n  {\n    id: '1',\n    content: 'Item One Content',\n    label: 'Item One',\n  }, {\n    id: '2',\n    content: 'Item Two Content',\n    label: 'Item Two',\n  }, {\n    id: '3',\n    content: 'Item Three Content',\n    label: 'Item Three',\n  }\n];\n\nclass Tabs extends Component {\n  render() {\n    return (\n      <TabsWrapper>\n        {\n          tabsContent.map((item, i) => (\n            <TabsPanel\n              id={item.id}\n              key={item.id}\n              label={item.label}\n            >\n              {item.content}\n            </TabsPanel>\n          ))\n        }\n      </TabsWrapper>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component } from 'react';\n\nimport classnames from 'classnames';\nimport {\n  Button,\n  // ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  // Icon,\n} from '@salesforce/design-system-react';\n\nimport Accordion from './Accordion';\nimport Tabs from './Tabs';\n\nconst addComponentOptions = [\n  {\n    label: 'Tabs',\n    value: 'tabs',\n    rightIcon: {\n      category: 'utility',\n      name: 'tabset'\n    }\n  },\n  {\n    label: 'Accordion',\n    value: 'accordion',\n    rightIcon: {\n      category: 'utility',\n      name: 'layers'\n    }\n  },\n  {\n    label: 'Chatter',\n    value: 'Chatter',\n    rightIcon: {\n      category: 'utility',\n      name: 'chat'\n    }\n  },\n];\n\nclass Canvas extends Component {\n  renderComponents() {\n    return (\n      this.props.data.header.components.map((componentData, i) => {\n        if(typeof(componentData.component) === 'string') {\n          return <div key={`static-${i}`}>{componentData.component}</div>\n          } else {\n            let ReactComponent = componentData.component;\n            return (\n              <ReactComponent children={componentData.children} key={`component-{i}`} />\n              )\n          }\n      })\n    )\n  }\n\n  render() {\n\n    return (\n      <div id=\"main-builder\" className=\"maxs mbn pam pbn bg-blue dg builder-grid dg-stretch\">\n        {/* <h2 className=\"slds-assistive-text\"></h2> */}\n        <div\n          id=\"builder-header\"\n          className=\"builder-region slds-text-align_center\"\n          aria-label=\"Header Region\"\n        >\n          <div className=\"mal\">\n            {this.renderComponents()}\n            <Dropdown\n              align=\"left\"\n              className=\"wi-full\"\n              options={addComponentOptions}\n            >\n              <DropdownTrigger>\n                <Button label=\"Add a Component: Header Region\" />\n              </DropdownTrigger>\n            </Dropdown>\n          </div>\n        </div>\n        <div\n          id=\"builder-main-col\"\n          className=\"builder-region slds-text-align_center\"\n          aria-label=\"Main Region\"\n        >\n          <div className=\"mal\">\n            {/* <Tabs data={this.props.data[0]} /> */}\n            <Dropdown\n              align=\"left\"\n              className=\"wi-full\"\n              options={addComponentOptions}\n            >\n              <DropdownTrigger>\n                <Button label=\"Add a Component: Main Region\" />\n              </DropdownTrigger>\n            </Dropdown>\n          </div>\n        </div>\n        <div\n          id=\"builder-small-col\"\n          className=\"builder-region slds-text-align_center\"\n          aria-label=\"Right Sidebar Region\"\n        >\n          <div className=\"mal\">\n            {/* <Accordion data={this.props.data[1]} /> */}\n            <Dropdown\n              align=\"left\"\n              className=\"wi-full\"\n              options={addComponentOptions}\n            >\n              <DropdownTrigger>\n                <Button label=\"Add a Component: Right Sidebar\" />\n              </DropdownTrigger>\n            </Dropdown>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  Icon,\n} from '@salesforce/design-system-react';\n\nclass Header extends Component {\n  renderHeaderActions() {\n    return (\n      <ButtonGroup>\n        <Button\n          assistiveText={{ icon: 'Undo' }}\n          iconCategory=\"utility\"\n          iconName=\"undo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('Undo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Redo' }}\n          iconCategory=\"utility\"\n          iconName=\"redo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('redo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Cut' }}\n          iconCategory=\"utility\"\n          iconName=\"cut\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('cut Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Copy' }}\n          iconCategory=\"utility\"\n          iconName=\"copy\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('copy Clicked'); }}\n          variant=\"icon\"\n        />\n      </ButtonGroup>\n    )\n  }\n\n  renderHeaderViews() {\n    /* Yes yes, I know these should actually be comboboxes \n     * but Im not concerned about functionality here \n     * cuz theyre just placeholders */\n    return (\n      <div className=\"mlx dib\">\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Desktop', value: 'A0' },\n            { label: 'Mobile', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mrs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Desktop\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Scale to Fit', value: 'A0' },\n            { label: 'Full size', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mhs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Scale to Fit\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Button\n          className=\"mhs\"\n          iconCategory=\"utility\"\n          iconName=\"refresh\"\n          iconPosition=\"left\"\n          label=\"Refresh\"\n        />\n      </div>\n    )\n  }\n\n  renderHeaderSave() {\n    return (\n      <div>\n        <Button label=\"Save\" variant=\"brand\" />\n        <Button label=\"Activate\" variant=\"brand\" />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <header id=\"header-section\">\n        <section className=\"df df-justify bg-navy\">\n          <div>\n            <span className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"builder\" size=\"small\" inverse />\n              <span className=\"phm\">Lightning App Builder</span>\n            </span>\n            <button className=\"pam dib brs border-white text-white\">\n              <span className=\"phm\">Pages</span>\n              <Icon category=\"utility\" name=\"chevrondown\" size=\"x-small\" inverse />\n            </button>\n          </div>\n          <span className=\"pam text-white\">App Name</span>\n          <div>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"back\" size=\"x-small\" inverse />\n              <span className=\"phm\">Back</span>\n            </button>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"help\" size=\"x-small\" inverse />\n              <span className=\"phm\">Help</span>\n            </button>\n          </div>\n        </section>\n\n        <section className=\"df df-justify bg-white\">\n          <div className=\"pam\">\n            {this.renderHeaderActions()}\n            {this.renderHeaderViews()}\n          </div>\n          <div className=\"pam\">\n            {this.renderHeaderSave()}\n          </div>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { addComponent } from './redux/actions';\nimport { ALL_COMPONENTS } from './redux/constants';\n\n// import classnames from 'classnames';\n// import {\n//   Button,\n//   ButtonGroup,\n//   Dropdown,\n//   DropdownTrigger,\n//   Icon,\n// } from '@salesforce/design-system-react';\n\nimport Accordion from './components/Accordion';\nimport Canvas from './components/Canvas';\nimport Header from './components/Header';\nimport Tabs from './components/Tabs';\n\nimport './App.css';\n\nconst mapStateToProps = state => {\n  return {\n    test: state.test,\n    canvas: state.canvas,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addComponent: (componentData, canvasRegion) => dispatch(addComponent(componentData, canvasRegion)),\n  };\n}\n\nconst componentData = [\n  {\n    component: Tabs,\n    children: [\n      {\n        panelIndex: 0,\n        content: <div>Panel 1</div>\n      }, {\n        panelIndex: 1,\n        content: <div>Panel 2</div>\n      }, {\n        panelIndex: 2,\n        content: <div>Panel 3</div>\n      }, {\n        panelIndex: 0,\n        content: <div>Panel 1 too</div>\n      }\n    ]\n  }, {\n    component: Accordion,\n    children: [\n      {\n        panelIndex: 0,\n        content: <div>Panel 1</div>\n      }, {\n        panelIndex: 1,\n        content: <div>Panel 2</div>\n      }, {\n        panelIndex: 2,\n        content: <div>Panel 3</div>\n      }\n    ]\n  }\n];\n\nclass ConnectedApp extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  addComponent = (region, component) => {\n    return (e) => {\n      const targetId = e.target.id;\n      const componentToAdd = ALL_COMPONENTS.find(x => x.id === targetId);\n      let stateCopy = Object.assign({}, this.props.canvas[region]);\n      stateCopy.components.push(componentToAdd);\n      this.props.addComponent(region, stateCopy);\n    }\n  }\n\n  render() {\n    //console.log('state', this.props.canvas);\n    return (\n      <div className=\"App ht-full dg app-grid bg-gray\">\n        <Header />\n        <main className=\"dg main-grid dg-stretch\">\n          <div id=\"components-sidebar\" className=\"pam bg-white bas border-gray\">\n            <h2 className=\"slds-text-heading_small\">Lightning Components</h2>\n            <button \n              id=\"chatter\"\n              onClick={this.addComponent('header')}>\n              Add to header\n            </button>\n          </div>\n          <Canvas data={this.props.canvas} />\n          <div id=\"properties-sidebar\" className=\"pam bg-white bas border-gray\">\n            <h2 className=\"slds-text-heading_small\">Properties</h2>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\n// connects react component to the redux store\nconst App = connect(mapStateToProps, mapDispatchToProps)(ConnectedApp);\nexport default App;\n\n","import {\n  ADD_COMPONENT\n} from './actionTypes';\n\nexport const addComponent = (region, newRegionData) => ({\n  type: ADD_COMPONENT,\n  region: region,\n  newRegionData: newRegionData,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n// import rootReducer from './redux/reducers';\nimport { IconSettings } from '@salesforce/design-system-react';\n\nrender(\n  <Provider store={store}>\n    <IconSettings iconPath=\"icons\">\n      <App />\n    </IconSettings>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}