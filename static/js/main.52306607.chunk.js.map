{"version":3,"sources":["components/AddCompButton.js","helpers.js","components/Tabs.js","components/Accordion.js","redux/constants.js","redux/reducers.js","redux/actionTypes.js","redux/store.js","components/Canvas.js","components/Header.js","components/Sidebar.js","App.js","redux/actions.js","index.js"],"names":["AddCompButton","_this","this","react_default","a","createElement","menu_dropdown","align","className","options","ALL_COMPONENTS","onSelect","e","props","addComponent","region","value","id","panelIndex","button_trigger","components_button","label","Component","cloneObject","obj","Object","assign","getAssistiveText","cmpType","index","numCmpsInRegion","action","concat","getNewIndex","arr","currIndex","operation","newIndex","length","getObjectbyKey","key","val","find","el","renderComponent","componentData","handleKeyDown","handleStartDrag","component","classnames","grabbed","isGrabbed","tabIndex","onKeyDown","data-type","button_group","assistiveText","icon","iconCategory","iconName","onClick","ReactComponent","children","Tabs","panelComponents","filter","panel","components_AddCompButton","react","map","i","_this2","tabs","ALL_LABELS","renderPanel","Accordion","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","expandedPanels","togglePanel","bind","assertThisInitialized","event","setState","objectSpread","defineProperty","accordion_panel","expanded","onTogglePanel","summary","_this3","accordion","rightIcon","category","name","initialState","test","regions","canvasRegions","canvas","header","components","main","sidebar","rootReducer","arguments","undefined","type","newRegionData","store","createStore","Canvas","keys","data","aria-labelledby","renderComponents","Header","iconSize","iconVariant","console","log","variant","iconPosition","size","inverse","renderHeaderActions","renderHeaderViews","renderHeaderSave","Sidebar","prevProps","prevState","currComponent","document","getElementById","focus","ConnectedApp","initAllComponents","allComponents","currFocusedElement","grabbedComponent","grabbedComponentCurrRegion","grabbedComponentIndex","grabbedComponentType","isDragDropMode","componentType","componentToAdd","componentIndex","parentComponentId","uniqid","regionDataCopy","parentComponentData","splice","updateRegion","shouldFocusDroppedComp","updatedAllComponents","droppedComponentID","updatingRegion","prevGrabbedComponentIndex","findIndex","updatedAssistiveText","newRegion","newComponentIndex","handleDrop","regionHTML","target","closest","componentHTML","substring","cmp","preventDefault","getAttribute","handleRightLeft","handleUpDown","updatedRegion","oldIndex","oldRegionName","newRegionIndex","reg","newRegionName","updatedOldRegionData","updatedNewRegionData","components_Header","components_Sidebar","components_Canvas","aria-live","App","connect","dispatch","regionData","render","es","icon_settings","iconPath","src_App"],"mappings":"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","file":"static/js/main.52306607.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownTrigger,\n} from '@salesforce/design-system-react';\n\nimport { ALL_COMPONENTS } from '../redux/constants';\n\nclass AddCompButton extends Component {\n  render() {\n    return (\n      <Dropdown\n        align=\"left\"\n        className=\"wi-full\"\n        options={ALL_COMPONENTS}\n        onSelect={(e) => {\n          this.props.addComponent(this.props.region, e.value, 0, this.props.id, this.props.panelIndex);\n        }}\n      >\n        <DropdownTrigger>\n          <Button label={this.props.label} />\n        </DropdownTrigger>\n      </Dropdown>\n    );\n  }\n}\n\nexport default AddCompButton;","import React from 'react';\nimport classnames from 'classnames';\nimport { Button, ButtonGroup } from '@salesforce/design-system-react';\n\nexport function cloneObject(obj) {\n  return Object.assign({}, obj);\n}\n\nexport function getAssistiveText(cmpType, region, index, numCmpsInRegion, action) {\n  return (`\n    ${cmpType} ${action}, \n    in ${region}. \n    Current position ${index + 1} of ${numCmpsInRegion}.\n  `);\n}\n\nexport function getNewIndex(arr, currIndex, operation) {\n  let newIndex = currIndex;\n  if (operation === 'add') {\n    newIndex++;\n    if (newIndex > arr.length - 1) newIndex = arr.length - 1;\n  } else if (operation === 'sub') {\n    newIndex--;\n    if (newIndex < 0) newIndex = 0;\n  }\n  return newIndex;\n}\n\nexport function getObjectbyKey(obj, key, val) {\n  return obj.find(el => el[key] === val);\n}\n\nexport function renderComponent(componentData, region, handleKeyDown, handleStartDrag, addComponent) {\n  if (typeof (componentData.component) === 'string') {\n    return (\n      <div\n        className={classnames(\"component\",\n          {\n            \"grabbed\": componentData.isGrabbed,\n          }\n        )}\n        id={componentData.id}\n        key={componentData.id}\n        tabIndex=\"0\"\n        onKeyDown={handleKeyDown}\n        data-type={componentData.value}\n      >\n        <ButtonGroup className=\"\">\n          <Button\n            assistiveText={{ icon: `Grab ${componentData.label}` }}\n            iconCategory=\"utility\"\n            iconName=\"rows\"\n            onClick={handleStartDrag}\n          />\n          <Button\n            assistiveText={{ icon: `Delete ${componentData.label}` }}\n            iconCategory=\"utility\"\n            iconName=\"delete\"\n          />\n        </ButtonGroup>\n        <div\n          className=\"mbs bg-gray pal\"\n        >\n          {componentData.label}\n        </div>\n      </div>\n    );\n  } else {\n    const ReactComponent = componentData.component;\n    return (\n      <div\n        className={classnames(\"component\",\n          {\n            \"grabbed\": componentData.isGrabbed,\n          }\n        )}\n        data-type={componentData.value}\n        id={componentData.id}\n        key={`component-${componentData.id}`}\n        onKeyDown={handleKeyDown}\n        tabIndex=\"0\"\n      >\n        <ButtonGroup className=\"\">\n          <Button\n            assistiveText={{ icon: `Grab ${componentData.label}` }}\n            iconCategory=\"utility\"\n            iconName=\"rows\"\n            onClick={handleStartDrag}\n          />\n          <Button\n            assistiveText={{ icon: `Delete ${componentData.label}` }}\n            iconCategory=\"utility\"\n            iconName=\"delete\"\n          />\n        </ButtonGroup>\n        <ReactComponent\n          addComponent={addComponent}\n          children={componentData.children}\n          className=\"mbs\"\n          handleKeyDown={handleKeyDown}\n          handleStartDrag={handleStartDrag}\n          id={`${componentData.id}`}\n          region={region}\n        />\n      </div>\n    )\n  }\n}\n","import React, { Component, Fragment } from 'react';\nimport { Tabs as TabsWrapper, TabsPanel } from '@salesforce/design-system-react';\n\nimport AddCompButton from './AddCompButton';\n\nimport { renderComponent } from '../helpers';\nimport { ALL_LABELS } from '../redux/constants';\n\nclass Tabs extends Component {\n  renderPanel(label, panelIndex) {\n    const panelComponents = this.props.children.filter(component => component.panelIndex === panelIndex);\n\n    return (\n      <TabsPanel\n        id={`${this.props.id}-${panelIndex}`}\n        key={`${this.props.id}-${panelIndex}`}\n        label={label}\n      >\n        {\n          panelComponents.length === 0 ?\n            <AddCompButton\n              addComponent={this.props.addComponent}\n              id={this.props.id}\n              label={`Add a Component: Tabs Panel ${panelIndex + 1}`}\n              panelIndex={panelIndex}\n              region={this.props.region}\n            /> : <Fragment>\n              {\n                panelComponents.map((componentData, i) => (\n                  renderComponent(\n                    componentData,\n                    this.props.region,\n                    this.props.handleKeyDown,\n                    this.props.handleStartDrag,\n                  )\n                ))\n              }\n            </Fragment>\n        }\n      </TabsPanel>\n    );\n  }\n\n  render() {\n    return (\n      <TabsWrapper className={this.props.className}>\n        {ALL_LABELS.map((label, i) => this.renderPanel(label, i))}\n      </TabsWrapper>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component, Fragment } from 'react';\nimport { Accordion as AccordionWrapper, AccordionPanel } from '@salesforce/design-system-react';\n\nimport AddCompButton from './AddCompButton';\n\nimport { renderComponent } from '../helpers';\nimport { ALL_LABELS } from '../redux/constants';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      expandedPanels: {},\n    };\n    this.togglePanel = this.togglePanel.bind(this)\n  }\n\n  togglePanel(event, id) {\n    this.setState((state) => ({\n      ...state,\n      expandedPanels: {\n        ...state.expandedPanels,\n        [id]: !state.expandedPanels[id],\n      },\n    }));\n  }\n\n  renderPanel(label, panelIndex) {\n    const panelComponents = this.props.children.filter(component => component.panelIndex === panelIndex);\n\n    return (\n      <AccordionPanel\n        expanded={!!this.state.expandedPanels[`${this.props.id}-${panelIndex}`]}\n        id={`${this.props.id}-${panelIndex}`}\n        key={`${this.props.id}-${panelIndex}`}\n        label={label}\n        onTogglePanel={(event) => this.togglePanel(event, `${this.props.id}-${panelIndex}`)}\n        summary={label}\n      >\n        {\n          panelComponents.length === 0 ?\n            <AddCompButton\n              addComponent={this.props.addComponent}\n              id={this.props.id}\n              label={`Add a Component: Accordion Panel ${panelIndex + 1}`}\n              panelIndex={panelIndex}\n              region={this.props.region}\n            /> : <Fragment>\n              {\n                panelComponents.map((componentData, i) => (\n                  renderComponent(\n                    componentData,\n                    this.props.region,\n                    this.props.handleKeyDown,\n                    this.props.handleStartDrag,\n                  )\n                ))\n              }\n            </Fragment>\n        }\n      </AccordionPanel>\n    );\n  }\n\n\n  render() {\n    return (\n      <AccordionWrapper id={this.props.id} className={`white-bkgd ${this.props.className}`}>\n        {ALL_LABELS.map((label, i) => this.renderPanel(label, i))}\n      </AccordionWrapper>\n    );\n  }\n}\n\nexport default Accordion;\n","import Tabs from '../components/Tabs';\nimport Accordion from '../components/Accordion';\n\nexport const HEADER = 'HEADER';\nexport const COMPONENT_PANEL = 'COMPONENT_PANEL';\nexport const CANVAS = 'CANVAS';\nexport const PROPERTY_PANEL = 'PROPERTY_PANEL';\nexport const CANVAS_HEADER = 'builder-header';\nexport const CANVAS_MAIN = 'builder-main';\nexport const CANVAS_SIDEBAR = 'builder-sidebar';\n\nexport const ALL_LABELS = ['Label 1', 'Label 2', 'Label 3'];\n\nexport const ALL_COMPONENTS = [\n  {\n    id: 'chatter',\n    component: 'chatter',\n    label: 'Chatter',\n    value: 'chatter',\n    rightIcon: {\n      category: 'utility',\n      name: 'tabset'\n    }\n  }, {\n    id: 'tabs',\n    component: Tabs,\n    children: [],\n    label: 'Tabs',\n    value: 'tabs',\n    rightIcon: {\n      category: 'utility',\n      name: 'layers'\n    }\n  }, {\n    id: 'accordion',\n    component: Accordion,\n    children: [],\n    label: 'Accordion',\n    value: 'accordion',\n    rightIcon: {\n      category: 'utility',\n      name: 'chat'\n    }\n  }\n];\n","import {\n  HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL,\n  CANVAS_HEADER, CANVAS_MAIN, CANVAS_SIDEBAR,\n} from './constants';\n\nimport {\n  UPDATE_REGION\n} from './actionTypes';\n\nimport Accordion from '../components/Accordion';\nimport Tabs from '../components/Tabs';\n\nconst initialState = {\n  test: \"test\",\n  regions: [HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL],\n  canvasRegions: [CANVAS_HEADER, CANVAS_MAIN, CANVAS_SIDEBAR],\n  canvas: {\n    header: {\n      components: [\n        {\n          component: Accordion,\n          id: '001',\n          value: 'accordion',\n          children: [\n            {\n              panelIndex: 0,\n              component: 'chatter',\n              label: 'Chatter',\n              id: '003',\n              value: 'chatter',\n            }\n          ]\n        }\n      ],\n    },\n    main: {\n      components: [\n        {\n          component: Tabs,\n          id: '002',\n          value: 'tabs',\n          children: [\n            {\n              panelIndex: 0,\n              component: 'chatter',\n              label: 'Chatter',\n              value: 'chatter',\n            }\n          ]\n        }\n      ],\n    },\n    sidebar: {\n      components: [],\n    },\n  }\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case UPDATE_REGION:\n      return {\n        ...state,\n        canvas: {\n          ...state.canvas,\n          [action.region]: action.newRegionData\n        }\n      }\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","export const UPDATE_REGION = \"UPDATE_REGION\";","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","import React, { Component } from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownTrigger,\n} from '@salesforce/design-system-react';\n\nimport { renderComponent } from '../helpers';\n\nimport { ALL_COMPONENTS } from '../redux/constants';\n\nclass Canvas extends Component {\n  renderComponents(region, components) {\n    if (components.length === 0) {\n      return (\n        <Dropdown\n          align=\"left\"\n          className=\"wi-full\"\n          options={ALL_COMPONENTS}\n          onSelect={(e) => {\n            this.props.addComponent(region, e.value);\n          }}\n        >\n          <DropdownTrigger>\n            <Button label={`Add a Component: ${region} Region`} />\n          </DropdownTrigger>\n        </Dropdown>\n      );\n    } else {\n      return (\n        components.map((componentData) => {\n          if (componentData !== undefined || componentData !== null) {\n            return renderComponent(\n              componentData,\n              region,\n              this.props.handleKeyDown,\n              this.props.handleStartDrag,\n              this.props.addComponent\n            )\n          }\n          return null;\n        })\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div id=\"main-builder\" className=\"maxs mbn pam pbn bg-blue dg builder-grid dg-stretch\">\n        {\n          Object.keys(this.props.data).map((region, i) => {\n            return (\n              <section\n                id={this.props.canvasRegions[i]}\n                className=\"builder-region slds-text-align_center\"\n                aria-labelledby={`builder-${region}-header`}\n                key={i}\n              >\n                <h2 className=\"slds-assistive-text\">{region} region</h2>\n                <div className=\"mal\" id={`builder-${region}-components`}>\n                  {this.renderComponents(region, this.props.data[region].components)}\n                </div>\n              </section>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  Icon,\n} from '@salesforce/design-system-react';\n\nclass Header extends Component {\n  renderHeaderActions() {\n    return (\n      <ButtonGroup>\n        <Button\n          assistiveText={{ icon: 'Undo' }}\n          iconCategory=\"utility\"\n          iconName=\"undo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('Undo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Redo' }}\n          iconCategory=\"utility\"\n          iconName=\"redo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('redo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Cut' }}\n          iconCategory=\"utility\"\n          iconName=\"cut\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('cut Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Copy' }}\n          iconCategory=\"utility\"\n          iconName=\"copy\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('copy Clicked'); }}\n          variant=\"icon\"\n        />\n      </ButtonGroup>\n    )\n  }\n\n  renderHeaderViews() {\n    /* Yes yes, I know these should actually be comboboxes \n     * but Im not concerned about functionality here \n     * cuz theyre just placeholders */\n    return (\n      <div className=\"mlx dib\">\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Desktop', value: 'A0' },\n            { label: 'Mobile', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mrs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Desktop\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Scale to Fit', value: 'A0' },\n            { label: 'Full size', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mhs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Scale to Fit\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Button\n          className=\"mhs\"\n          iconCategory=\"utility\"\n          iconName=\"refresh\"\n          iconPosition=\"left\"\n          label=\"Refresh\"\n        />\n      </div>\n    )\n  }\n\n  renderHeaderSave() {\n    return (\n      <div>\n        <Button label=\"Save\" variant=\"brand\" />\n        <Button label=\"Activate\" variant=\"brand\" />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <header id=\"header-section\">\n        <section className=\"df df-justify bg-navy\">\n          <div>\n            <span className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"builder\" size=\"small\" inverse />\n              <span className=\"phm\">Lightning App Builder</span>\n            </span>\n            <button className=\"pam dib brs border-white text-white\">\n              <span className=\"phm\">Pages</span>\n              <Icon category=\"utility\" name=\"chevrondown\" size=\"x-small\" inverse />\n            </button>\n          </div>\n          <span className=\"pam text-white\">App Name</span>\n          <div>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"back\" size=\"x-small\" inverse />\n              <span className=\"phm\">Back</span>\n            </button>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"help\" size=\"x-small\" inverse />\n              <span className=\"phm\">Help</span>\n            </button>\n          </div>\n        </section>\n\n        <section className=\"df df-justify bg-white\">\n          <div className=\"pam\">\n            {this.renderHeaderActions()}\n            {this.renderHeaderViews()}\n          </div>\n          <div className=\"pam\">\n            {this.renderHeaderSave()}\n          </div>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Button, Icon } from '@salesforce/design-system-react';\n\nimport { ALL_COMPONENTS } from '../redux/constants';\nimport { getNewIndex } from '../helpers';\n\nclass Sidebar extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { currIndex: 0 };\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    let currComponent = ALL_COMPONENTS[this.state.currIndex];\n    if (prevState.currIndex !== this.state.currIndex) {\n      document.getElementById(currComponent.id).focus();\n    }\n  }\n\n  handleKeyDown(event) {\n    let newIndex = this.state.currIndex;\n    if (event.key === 'ArrowDown') newIndex = getNewIndex(ALL_COMPONENTS, this.state.currIndex, 'add');\n    else if (event.key === 'ArrowUp') newIndex = getNewIndex(ALL_COMPONENTS, this.state.currIndex, 'sub');\n    this.setState({ currIndex: newIndex });\n  }\n\n  render() {\n    return (\n      <div id=\"components-sidebar\" className=\"pam bg-white bas border-gray\">\n        <h2 className=\"mbs slds-text-heading_small\">Lightning Components</h2>\n        <ul>\n          {\n            ALL_COMPONENTS.map((component, i) => {\n              return (\n                <li className=\"mbs df df-justify\" key={component.id}>\n                  <Button\n                    iconCategory={component.rightIcon.category}\n                    iconName={component.rightIcon.name}\n                    iconPosition=\"left\"\n                    label={component.label}\n                    onKeyDown={this.handleKeyDown}\n                    onClick={() => {\n                      this.props.handleStartDrag(component.id)\n                    }}\n                    variant=\"base\"\n                    id={component.id}\n                    tabIndex={i === this.state.currIndex ? \"0\" : \"-1\"}\n                  />\n                  <div>\n                    <Icon\n                      assistiveText={{ label: 'Desktop Compatible' }}\n                      category=\"utility\"\n                      name=\"desktop\"\n                      size=\"x-small\"\n                    />\n                    <Icon\n                      assistiveText={{ label: 'Mobile Compatible' }}\n                      category=\"utility\"\n                      name=\"phone_portrait\"\n                      size=\"x-small\"\n                    />\n                  </div>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nimport { connect } from 'react-redux';\nimport { updateRegion } from './redux/actions';\nimport { ALL_COMPONENTS } from './redux/constants';\n\nimport {\n  cloneObject,\n  getAssistiveText,\n  getNewIndex,\n  getObjectbyKey,\n} from './helpers';\n\nimport Canvas from './components/Canvas';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\n\nimport './App.css';\n\nconst mapStateToProps = state => {\n  return {\n    canvas: state.canvas,\n    canvasRegions: state.canvasRegions,\n  };\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    updateRegion: (region, regionData) => dispatch(updateRegion(region, regionData)),\n  };\n}\n\nclass ConnectedApp extends Component {\n  constructor(props) {\n    super(props);\n    const initAllComponents = cloneObject(this.props.canvas);\n\n    this.state = {\n      allComponents: initAllComponents,\n      assistiveText: '',\n      currFocusedElement: null,\n      grabbedComponent: null,\n      grabbedComponentCurrRegion: 'header',\n      grabbedComponentIndex: 0,\n      grabbedComponentType: null,\n      isDragDropMode: false,\n    }\n\n    this.addComponent = this.addComponent.bind(this);\n    this.handleStartDrag = this.handleStartDrag.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.state.currFocusedElement !== null) {\n      document.getElementById(this.state.currFocusedElement).focus();\n    }\n  }\n\n  addComponent(region, componentType, componentIndex = 0, parentComponentId = null, panelIndex = -1) {\n    let componentToAdd;\n\n    if (this.state.grabbedComponent === null) {\n      const cmp = getObjectbyKey(ALL_COMPONENTS, 'id', componentType);\n      componentToAdd = cloneObject(cmp);\n    } else {\n      componentToAdd = cloneObject(this.state.grabbedComponent);\n    };\n\n    componentToAdd.id = uniqid();\n    componentToAdd.isGrabbed = false;\n\n    let regionDataCopy = cloneObject(this.props.canvas[region]);\n\n    if (panelIndex > -1) {\n      let parentComponentData = getObjectbyKey(regionDataCopy.components, 'id', parentComponentId);\n      componentToAdd.panelIndex = panelIndex;\n      parentComponentData.children.splice(panelIndex, 0, componentToAdd);\n    } else regionDataCopy.components.splice(componentIndex, 0, componentToAdd);\n\n    this.props.updateRegion(region, regionDataCopy);\n    this.setState({ currFocusedElement: componentToAdd.id });\n\n\n    return componentToAdd.id;\n  }\n\n  handleDrop(shouldFocusDroppedComp) {\n    let updatedAllComponents = cloneObject(this.props.canvas);\n    let droppedComponentID = this.addComponent(\n      this.state.grabbedComponentCurrRegion,\n      this.state.grabbedComponentType,\n      this.state.grabbedComponentIndex,\n    );\n\n    // removes existing grabbed component from updatedAllComponents\n    let updatingRegion = updatedAllComponents[this.state.grabbedComponentCurrRegion].components;\n    let prevGrabbedComponentIndex = updatingRegion.findIndex(el => el.isGrabbed === true);\n    updatingRegion.splice(prevGrabbedComponentIndex, 1);\n\n    let updatedAssistiveText = getAssistiveText(\n      this.state.grabbedComponentType,\n      this.state.grabbedComponentCurrRegion,\n      this.state.grabbedComponentIndex,\n      updatingRegion.length,\n      'dropped'\n    );\n\n    this.setState((prevState) => {\n      return {\n        allComponents: updatedAllComponents,\n        assistiveText: updatedAssistiveText,\n        currFocusedElement: shouldFocusDroppedComp ? droppedComponentID : prevState.currFocusedElement,\n        grabbedComponent: null,\n        grabbedComponentIndex: 0,\n        grabbedComponentCurrRegion: 'header',\n        isDragDropMode: false,\n      }\n    });\n  }\n\n  handleStartDrag(componentType, event = null) {\n    let updatedAllComponents = cloneObject(this.props.canvas);\n    let newRegion = 'header';\n    let componentToAdd;\n    let newComponentIndex = 0;\n\n    // can only have one grabbed component at a time - drop currently grabbed thing before grab new one\n    if (this.state.grabbedComponent !== null) this.handleDrop();\n\n    // if on a component already in redux, need to remove the component from redux and put it in app state\n    if (event !== null) {\n      const regionHTML = event.target.closest('section');\n      const componentHTML = event.target.closest('div.component')\n      newRegion = regionHTML.id.substring(8);\n\n      // gets the existing component & index from redux\n      componentToAdd = cloneObject(\n        getObjectbyKey(updatedAllComponents[newRegion].components, 'id', componentHTML.id)\n      );\n      newComponentIndex = updatedAllComponents[newRegion].components.findIndex(cmp => cmp.id === componentHTML.id);\n\n      // removes component from local state and redux state\n      updatedAllComponents[newRegion].components.splice(newComponentIndex, 1);\n      this.props.updateRegion(newRegion, updatedAllComponents[newRegion]);\n    } else {\n      // the new grabbed component\n      // had to mess around with referencing a lot - I KEPT OVERWRITING THINGS ON ACCIDENT\n      const cmp = getObjectbyKey(ALL_COMPONENTS, 'id', componentType);\n      componentToAdd = cloneObject(cmp);\n    }\n\n    componentToAdd.id = `floating-${componentType}`;\n    componentToAdd.isGrabbed = true;\n\n    updatedAllComponents[newRegion].components.splice(newComponentIndex, 0, componentToAdd);\n\n    let updatedAssistiveText = getAssistiveText(\n      componentType,\n      newRegion,\n      newComponentIndex,\n      updatedAllComponents[newRegion].components.length,\n      'grabbed'\n    );\n\n    this.setState({\n      allComponents: updatedAllComponents,\n      assistiveText: updatedAssistiveText,\n      currFocusedElement: componentToAdd.id,\n      isDragDropMode: true,\n      grabbedComponent: componentToAdd,\n      grabbedComponentIndex: newComponentIndex,\n      grabbedComponentType: componentType,\n      grabbedComponentCurrRegion: newRegion,\n    });\n  }\n\n  handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      if (this.state.grabbedComponent !== null) this.handleDrop(true);\n      else this.handleStartDrag(event.target.getAttribute('data-type'), event);\n    } else if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n      this.handleRightLeft(event);\n    } else if (event.key === 'ArrowUp' || event.key === 'ArrowDown') {\n      this.handleUpDown(event);\n    }\n  }\n\n  handleUpDown(event) {\n    event.preventDefault();\n    let updatedAllComponents = cloneObject(this.props.canvas);\n    let updatedRegion = updatedAllComponents[this.state.grabbedComponentCurrRegion].components;\n    const oldIndex = this.state.grabbedComponentIndex;\n    let newIndex = getNewIndex(updatedRegion, oldIndex, event.key === 'ArrowDown' ? 'add' : 'sub');\n\n    updatedRegion.splice(newIndex, 0, updatedRegion.splice(oldIndex, 1)[0]);\n    updatedAllComponents[this.state.grabbedComponentCurrRegion].component = updatedRegion;\n\n    let updatedAssistiveText = getAssistiveText(\n      this.state.grabbedComponentType,\n      this.state.grabbedComponentCurrRegion,\n      newIndex,\n      updatedRegion.length,\n      'grabbed'\n    );\n\n    this.setState({\n      allComponents: updatedAllComponents,\n      assistiveText: updatedAssistiveText,\n      grabbedComponentIndex: newIndex,\n    });\n  }\n\n  handleRightLeft(event) {\n    event.preventDefault();\n    let updatedAllComponents = cloneObject(this.props.canvas);\n    const oldRegionName = `builder-${this.state.grabbedComponentCurrRegion}`;\n    let newRegionIndex = getNewIndex(\n      this.props.canvasRegions,\n      this.props.canvasRegions.findIndex(reg => reg === oldRegionName),\n      event.key === 'ArrowRight' ? 'add' : 'sub'\n    );\n\n    // take the 'builder-' part out of the name\n    const newRegionName = this.props.canvasRegions[newRegionIndex].substring(8);\n    let updatedOldRegionData = updatedAllComponents[this.state.grabbedComponentCurrRegion].components;\n    let updatedNewRegionData = updatedAllComponents[newRegionName].components;\n\n    // take grabbed out of old region\n    updatedOldRegionData.splice(this.state.grabbedComponentIndex, 1);\n    // add grabbed to top of new region\n    updatedNewRegionData.splice(0, 0, this.state.grabbedComponent);\n\n    let updatedAssistiveText = getAssistiveText(\n      this.state.grabbedComponentType,\n      newRegionName,\n      0,\n      updatedNewRegionData.length,\n      'grabbed'\n    );\n\n    this.setState({\n      allComponents: updatedAllComponents,\n      assistiveText: updatedAssistiveText,\n      grabbedComponentIndex: 0,\n      grabbedComponentCurrRegion: newRegionName,\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"App ht-full dg app-grid bg-gray\">\n        <Header />\n        <main className=\"dg main-grid dg-stretch\">\n          <Sidebar handleStartDrag={this.handleStartDrag} />\n          <Canvas\n            data={this.state.allComponents}\n            addComponent={this.addComponent}\n            isDragDropMode={this.state.isDragDropMode}\n            handleKeyDown={this.handleKeyDown}\n            canvasRegions={this.props.canvasRegions}\n            handleStartDrag={this.handleStartDrag}\n          />\n          <div id=\"properties-sidebar\" className=\"pam bg-white bas border-gray\">\n            <h2 className=\"slds-text-heading_small\">Properties</h2>\n          </div>\n        </main>\n        <div aria-live=\"assertive\" className=\"\">\n          {this.state.assistiveText}\n        </div>\n      </div>\n    );\n  }\n}\n\n// connects react component to the redux store\nconst App = connect(mapStateToProps, mapDispatchToProps)(ConnectedApp);\nexport default App;\n","import {\n  UPDATE_REGION\n} from './actionTypes';\n\nexport const updateRegion = (region, newRegionData) => ({\n  type: UPDATE_REGION,\n  region: region,\n  newRegionData: newRegionData,\n});\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n// import rootReducer from './redux/reducers';\nimport { IconSettings } from '@salesforce/design-system-react';\n\nrender(\n  <Provider store={store}>\n    <IconSettings iconPath=\"icons\">\n      <App />\n    </IconSettings>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}