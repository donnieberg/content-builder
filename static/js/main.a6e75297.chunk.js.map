{"version":3,"sources":["components/AddCompButton.js","components/CanvasComponent.js","components/Tabs.js","components/Accordion.js","redux/constants.js","redux/reducers.js","redux/store.js","initComponents.js","helpers.js","components/Canvas.js","components/Header.js","components/Sidebar.js","components/Properties.js","App.js","index.js"],"names":["AddCompButton","_this","this","react_default","a","createElement","menu_dropdown","align","className","options","ALL_COMPONENTS","onSelect","event","props","handleNewComponent","value","region","parentId","panelIndex","button_trigger","components_button","label","Component","CanvasComponent","src","concat","componentData","imageSrc","alt","ReactComponent","component","addComponent","panels","handleKeyDown","handleStartDrag","id","isReactComponent","classnames","parent-component","grabbed","isGrabbed","key","tabIndex","onKeyDown","data-type","data-panelindex","assistiveText","icon","iconCategory","iconName","iconVariant","onClick","variant","disabled","renderReactComponent","renderStaticComponent","Tabs","panel","tabs_panel","index","name","components","length","components_AddCompButton","react","map","i","components_CanvasComponent","_this2","tabs","renderPanel","Accordion","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","expandedPanels","togglePanel","bind","assertThisInitialized","setState","objectSpread","defineProperty","accordion_panel","expanded","onTogglePanel","summary","_this3","accordion","rightIcon","category","initialState","test","regions","currFocusedRegion","rootReducer","arguments","undefined","type","store","createStore","initComponents","header","main","sidebar","cloneObject","obj","assign","getAssistiveText","cmpType","numCmpsInRegion","action","parentType","panelName","getObjectbyKey","val","find","el","Canvas","ref","canvasRef","keys","data","aria-labelledby","renderComponents","Header","button_group","iconSize","console","log","iconPosition","headerRef","size","inverse","renderHeaderActions","renderHeaderViews","renderHeaderSave","Sidebar","sidebarRef","Properties","ConnectedApp","handleF6","current","focus","propertiesRef","allComponents","currFocusedElement","grabbedComponent","grabbedComponentCurrRegion","isDragDropMode","React","createRef","document","getElementById","newComponent","updatedComponents","uniqid","splice","preventDefault","stopPropagation","handleGrab","target","handleDrop","handleMoveRegion","handleMoveIndex","componentHTML","closest","substring","hasAttribute","getAttribute","parentHTML","parentObject","findIndex","cmp","regionComponents","cmpInAllComponents","componentIndex","newRegion","currentRegionIndex","shouldRemoveOld","currentComponentIndex","newIndex","parseInt","parentIndex","aria-live","components_Header","components_Sidebar","components_Canvas","components_Properties","App","connect","render","es","icon_settings","iconPath","src_App"],"mappings":"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","file":"static/js/main.a6e75297.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {\n  Button,\n  Dropdown,\n  DropdownTrigger,\n} from '@salesforce/design-system-react';\n\nimport { ALL_COMPONENTS } from '../redux/constants';\n\nclass AddCompButton extends Component {\n  render() {\n    return (\n      <Dropdown\n        align=\"left\"\n        className=\"wi-full\"\n        options={ALL_COMPONENTS}\n        onSelect={(event) => {\n          this.props.handleNewComponent(\n            event.value,\n            this.props.region,\n            this.props.parentId,\n            this.props.panelIndex,\n          );\n        }}\n      >\n        <DropdownTrigger>\n          <Button label={this.props.label} />\n        </DropdownTrigger>\n      </Dropdown>\n    );\n  }\n}\n\nexport default AddCompButton;\n","import React, { Component } from 'react';\nimport classnames from 'classnames';\nimport { Button } from '@salesforce/design-system-react';\n\nclass CanvasComponent extends Component {\n  renderStaticComponent() {\n    return (\n      <div className=\"bam border-blue\">\n        <img\n          src={`./images/${this.props.componentData.imageSrc}`}\n          alt={`placeholder stencil for ${this.props.componentData.label}`}\n        />\n      </div>\n    );\n  }\n\n  renderReactComponent() {\n    const ReactComponent = this.props.componentData.component;\n    return (\n      <ReactComponent\n        addComponent={this.props.addComponent}\n        panels={this.props.componentData.panels}\n        className=\"mbs\"\n        handleKeyDown={this.props.handleKeyDown}\n        handleNewComponent={this.props.handleNewComponent}\n        handleStartDrag={this.props.handleStartDrag}\n        id={`${this.props.componentData.id}`}\n        region={this.props.region}\n      />\n    );\n  }\n\n\n  render() {\n    const isReactComponent = !(typeof (this.props.componentData.component) === 'string');\n    return (\n      <div\n        className={classnames(\"component pos-rel\", this.props.className,\n          {\n            \"parent-component\": isReactComponent,\n            \"grabbed\": this.props.componentData.isGrabbed,\n          }\n        )}\n        id={this.props.componentData.id}\n        key={`component-${this.props.componentData.id}`}\n        tabIndex=\"0\"\n        onKeyDown={this.props.handleKeyDown}\n        data-type={this.props.componentData.value}\n        data-panelindex={this.props.panelIndex}\n      >\n        <div className=\"pas pos-abs right-0 z-above\">\n          <Button\n            assistiveText={{ icon: `Grab ${this.props.componentData.label}` }}\n            className=\"cmp-action-btn bg-white mrs\"\n            iconCategory=\"utility\"\n            iconName=\"rows\"\n            iconVariant=\"border\"\n            onClick={this.props.handleStartDrag}\n            variant=\"icon\"\n            disabled\n          />\n          <Button\n            assistiveText={{ icon: `Delete ${this.props.componentData.label}` }}\n            className=\"cmp-action-btn bg-white mrs\"\n            iconCategory=\"utility\"\n            iconName=\"delete\"\n            iconVariant=\"border\"\n            variant=\"icon\"\n          />\n\n        </div>\n        {\n          isReactComponent ?\n            this.renderReactComponent() : this.renderStaticComponent()\n        }\n      </div>\n    )\n  }\n}\n\nexport default CanvasComponent;\n","import React, { Component, Fragment } from 'react';\nimport { Tabs as TabsWrapper, TabsPanel } from '@salesforce/design-system-react';\n\nimport AddCompButton from './AddCompButton';\nimport CanvasComponent from './CanvasComponent';\n\nclass Tabs extends Component {\n  renderPanel(panel) {\n    return (\n      <TabsPanel\n        id={`${this.props.id}-${panel.index}`}\n        key={`${this.props.id}-${panel.index}`}\n        label={panel.name}\n      >\n        {\n          panel.components.length === 0 ?\n            <AddCompButton\n              // handleStartDrag={this.props.handleStartDrag}\n              handleNewComponent={this.props.handleNewComponent}\n              id={this.props.id}\n              label={`Add a Component: ${panel.name}`}\n              panelIndex={panel.index}\n              region={this.props.region}\n              parentId={this.props.id}\n            /> : <Fragment>\n              {\n                panel.components.map((componentData, i) => (\n                  <CanvasComponent\n                    className=\"child-component\"\n                    componentData={componentData}\n                    region={this.props.region}\n                    handleKeyDown={this.props.handleKeyDown}\n\n                    handleStartDrag={this.props.handleStartDrag}\n                    panelIndex={panel.index}\n                    parentId={this.props.id}\n                    key={`tcomp-${componentData.id}`}\n                  />\n                ))\n              }\n            </Fragment>\n        }\n      </TabsPanel>\n    );\n  }\n\n  render() {\n    return (\n      <TabsWrapper className={this.props.className}>\n        {this.props.panels.map((panel) => this.renderPanel(panel))}\n      </TabsWrapper>\n    );\n  }\n}\n\nexport default Tabs;\n","import React, { Component, Fragment } from 'react';\nimport { Accordion as AccordionWrapper, AccordionPanel } from '@salesforce/design-system-react';\n\nimport AddCompButton from './AddCompButton';\nimport CanvasComponent from './CanvasComponent';\n\nclass Accordion extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { expandedPanels: {} };\n    this.togglePanel = this.togglePanel.bind(this)\n  }\n\n  togglePanel(id) {\n    this.setState((state) => ({\n      ...state,\n      expandedPanels: {\n        ...state.expandedPanels,\n        [id]: !state.expandedPanels[id],\n      },\n    }));\n  }\n\n  renderPanel(panel) {\n    return (\n      <AccordionPanel\n        expanded={!!this.state.expandedPanels[`${this.props.id}-${panel.index}`]}\n        id={`${this.props.id}-${panel.index}`}\n        key={`${this.props.id}-${panel.index}`}\n        label={panel.name}\n        onTogglePanel={(event) => this.togglePanel(`${this.props.id}-${panel.index}`)}\n        summary={panel.name}\n      >\n        {\n          panel.components.length === 0 ?\n            <AddCompButton\n              handleNewComponent={this.props.handleNewComponent}\n              id={this.props.id}\n              label={`Add a Component: ${panel.name}`}\n              panelIndex={panel.index}\n              region={this.props.region}\n              parentId={this.props.id}\n            /> : <Fragment>\n              {\n                panel.components.map((componentData, i) => (\n                  <CanvasComponent\n                    className=\"child-component\"\n                    componentData={componentData}\n                    region={this.props.region}\n                    handleKeyDown={this.props.handleKeyDown}\n                    handleStartDrag={this.props.handleStartDrag}\n                    panelIndex={panel.index}\n                    parentId={this.props.id}\n                    key={`tcomp-${componentData.id}`}\n                  />\n                ))\n              }\n            </Fragment>\n        }\n      </AccordionPanel>\n    );\n  }\n\n\n  render() {\n    return (\n      <AccordionWrapper id={this.props.id} className={`white-bkgd ${this.props.className}`}>\n        {this.props.panels.map((panel) => this.renderPanel(panel))}\n      </AccordionWrapper>\n    );\n  }\n}\n\nexport default Accordion;\n","import Tabs from '../components/Tabs';\nimport Accordion from '../components/Accordion';\n\nexport const HEADER = 'HEADER';\nexport const COMPONENT_PANEL = 'COMPONENT_PANEL';\nexport const CANVAS = 'CANVAS';\nexport const PROPERTY_PANEL = 'PROPERTY_PANEL';\n\nexport const ALL_COMPONENTS = [\n  {\n    id: 'chatter',\n    imageSrc: 'stencil_chatter.png',\n    component: 'chatter',\n    label: 'Chatter',\n    value: 'chatter',\n    rightIcon: {\n      category: 'utility',\n      name: 'chat'\n    }\n  }, {\n    id: 'tabs',\n    component: Tabs,\n    panels: [\n      {\n        index: 0,\n        name: 'Label 1',\n        components: []\n      }, {\n        index: 1,\n        name: 'Label 2',\n        components: []\n      }, {\n        index: 2,\n        name: 'Label 3',\n        components: []\n      },\n    ],\n    label: 'Tabs',\n    value: 'tabs',\n    rightIcon: {\n      category: 'utility',\n      name: 'tabset'\n    }\n  }, {\n    id: 'accordion',\n    component: Accordion,\n    panels: [\n      {\n        index: 0,\n        name: 'Label 1',\n        components: [],\n      }, {\n        index: 1,\n        name: 'Label 2',\n        components: [],\n      }, {\n        index: 2,\n        name: 'Label 3',\n        components: [],\n      },\n    ],\n    label: 'Accordion',\n    value: 'accordion',\n    rightIcon: {\n      category: 'utility',\n      name: 'layers'\n    }\n  }, {\n    id: 'form',\n    component: 'form',\n    label: 'Form',\n    imageSrc: 'stencil_inputs.png',\n    value: 'form',\n    rightIcon: {\n      category: 'utility',\n      name: 'record_update'\n    }\n  }, {\n    id: 'fields',\n    component: 'fields',\n    label: 'Form Fields',\n    imageSrc: 'stencil_formFields.png',\n    value: 'fields',\n    rightIcon: {\n      category: 'utility',\n      name: 'rows'\n    }\n  }\n];\n","import {\n  HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL,\n} from './constants';\n\n// import {\n//   UPDATE_FOCUSED_REGION\n// } from './actionTypes';\n\nconst initialState = {\n  test: \"test\",\n  regions: [HEADER, COMPONENT_PANEL, CANVAS, PROPERTY_PANEL],\n  currFocusedRegion: null,\n};\n\nconst rootReducer = (state = initialState, action) => {\n  switch (action.type) {\n    default:\n      return state;\n  }\n};\n\nexport default rootReducer;\n","import { createStore } from 'redux';\nimport rootReducer from './reducers';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n\n","import Accordion from './components/Accordion';\nimport Tabs from './components/Tabs';\n\nexport const initComponents = {\n  header: {\n    components: [\n      {\n        component: Accordion,\n        id: '001',\n        value: 'accordion',\n        panels: [\n          {\n            index: 0,\n            name: 'Label 1',\n            components: [\n              {\n                panelIndex: 0,\n                component: 'chatter',\n                label: 'Chatter',\n                id: '003',\n                imageSrc: 'stencil_chatter.png',\n                value: 'chatter',\n              }\n            ]\n          }, {\n            index: 1,\n            name: 'Label 2',\n            components: []\n          }, {\n            index: 2,\n            name: 'Label 3',\n            components: []\n          },\n        ],\n      }\n    ],\n  },\n  main: {\n    components: [\n      {\n        component: 'form',\n        label: 'Form',\n        id: '008',\n        imageSrc: 'stencil_inputs.png',\n        value: 'form',\n      }, {\n        component: Tabs,\n        id: '002',\n        value: 'tabs',\n        panels: [\n          {\n            index: 0,\n            name: 'Label 1',\n            components: [\n              {\n                panelIndex: 0,\n                component: 'chatter',\n                label: 'Chatter',\n                id: '004',\n                imageSrc: 'stencil_chatter.png',\n                value: 'chatter',\n              }, {\n                panelIndex: 0,\n                component: 'fields',\n                label: 'Form Fields',\n                id: '005',\n                imageSrc: 'stencil_formFields.png',\n                value: 'fields',\n              }\n            ],\n          }, {\n            index: 1,\n            name: 'Label 2',\n            components: [\n              {\n                panelIndex: 1,\n                component: 'chatter',\n                label: 'Chatter',\n                id: '006',\n                imageSrc: 'stencil_chatter.png',\n                value: 'chatter',\n              }\n            ]\n          }, {\n            index: 2,\n            name: 'Label 3',\n            components: []\n          },\n        ],\n      }, {\n        component: 'form',\n        label: 'Form',\n        id: '007',\n        imageSrc: 'stencil_inputs.png',\n        value: 'form',\n      }\n    ],\n  },\n  sidebar: {\n    components: [],\n  },\n}; ","export function cloneObject(obj) {\n  return Object.assign({}, obj);\n}\n\nexport function getAssistiveText(cmpType, region, index, numCmpsInRegion, action, parentType = null, panelName = null) {\n  if (parentType) {\n    return (`\n      ${cmpType} ${action}, \n      in ${panelName} panel, ${region} region.\n      Currently ${index + 1} of ${numCmpsInRegion}.\n    `);\n  }\n\n  return (`\n    ${cmpType} ${action}, \n    in ${region} region. \n    Current position ${index + 1} of ${numCmpsInRegion}.\n  `);\n}\n\nexport function getNewIndex(arr, currIndex, operation) {\n  let newIndex = currIndex;\n  if (operation === 'add') {\n    newIndex++;\n    if (newIndex > arr.length - 1) newIndex = arr.length - 1;\n  } else if (operation === 'sub') {\n    newIndex--;\n    if (newIndex < 0) newIndex = 0;\n  }\n  return newIndex;\n}\n\nexport function getObjectbyKey(obj, key, val) {\n  return obj.find(el => el[key] === val);\n}\n","import React, { Component } from 'react';\n\n// import { renderComponent } from '../helpers';\nimport CanvasComponent from './CanvasComponent';\nimport AddCompButton from './AddCompButton';\n\nclass Canvas extends Component {\n  renderComponents(region, components) {\n    if (components.length === 0) {\n      return (\n        <AddCompButton\n          id={this.props.id}\n          label={`Add a Component: ${region} Region`}\n          region={region}\n          handleNewComponent={this.props.handleNewComponent}\n        // handleStartDrag={this.props.handleStartDrag}\n        />\n      );\n    } else {\n      return (\n        components.map((componentData, i) => {\n          if (componentData !== undefined || componentData !== null) {\n            return <CanvasComponent\n              key={`ccomp-${componentData.id}`}\n              componentData={componentData}\n              region={region}\n              handleKeyDown={this.props.handleKeyDown}\n              handleNewComponent={this.props.handleNewComponent}\n              handleStartDrag={this.props.handleStartDrag}\n            />\n          }\n          return null;\n        })\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div\n        id=\"main-builder\"\n        className=\"maxs mbn pam pbn bg-blue dg builder-grid dg-stretch\"\n        ref={this.props.canvasRef}\n        tabIndex=\"-1\"\n      >\n        {\n          Object.keys(this.props.data).map((region, i) => {\n            return (\n              <section\n                id={`builder-${region}`}\n                className=\"builder-region slds-text-align_center\"\n                aria-labelledby={`builder-${region}-header`}\n                key={i}\n              >\n                <h2 className=\"slds-assistive-text\">{region} region</h2>\n                <div className=\"mal\" id={`builder-${region}-components`}>\n                  {this.renderComponents(region, this.props.data[region].components)}\n                </div>\n              </section>\n            );\n          })\n        }\n      </div>\n    );\n  }\n}\n\nexport default Canvas;\n","import React, { Component } from 'react';\nimport {\n  Button,\n  ButtonGroup,\n  Dropdown,\n  DropdownTrigger,\n  Icon,\n} from '@salesforce/design-system-react';\n\nclass Header extends Component {\n  renderHeaderActions() {\n    return (\n      <ButtonGroup>\n        <Button\n          assistiveText={{ icon: 'Undo' }}\n          iconCategory=\"utility\"\n          iconName=\"undo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('Undo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Redo' }}\n          iconCategory=\"utility\"\n          iconName=\"redo\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('redo Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Cut' }}\n          iconCategory=\"utility\"\n          iconName=\"cut\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('cut Clicked'); }}\n          variant=\"icon\"\n        />\n        <Button\n          assistiveText={{ icon: 'Copy' }}\n          iconCategory=\"utility\"\n          iconName=\"copy\"\n          iconSize=\"medium\"\n          iconVariant=\"border\"\n          onClick={() => { console.log('copy Clicked'); }}\n          variant=\"icon\"\n        />\n      </ButtonGroup>\n    )\n  }\n\n  renderHeaderViews() {\n    /* Yes yes, I know these should actually be comboboxes \n     * but Im not concerned about functionality here \n     * cuz theyre just placeholders */\n    return (\n      <div className=\"mlx dib\">\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Desktop', value: 'A0' },\n            { label: 'Mobile', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mrs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Desktop\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Dropdown\n          align=\"right\"\n          options={[\n            { label: 'Scale to Fit', value: 'A0' },\n            { label: 'Full size', value: 'B0' }\n          ]}\n        >\n          <DropdownTrigger>\n            <Button\n              className=\"mhs\"\n              iconCategory=\"utility\"\n              iconName=\"down\"\n              iconPosition=\"right\"\n              label=\"Scale to Fit\"\n            />\n          </DropdownTrigger>\n        </Dropdown>\n        <Button\n          className=\"mhs\"\n          iconCategory=\"utility\"\n          iconName=\"refresh\"\n          iconPosition=\"left\"\n          label=\"Refresh\"\n        />\n      </div>\n    )\n  }\n\n  renderHeaderSave() {\n    return (\n      <div>\n        <Button label=\"Save\" variant=\"brand\" />\n        <Button label=\"Activate\" variant=\"brand\" />\n      </div>\n    )\n  }\n\n  render() {\n    return (\n      <header \n        id=\"header-section\" \n        className=\"region-focus\"\n        ref={this.props.headerRef}\n        tabIndex=\"-1\"\n      >\n        <section className=\"df df-justify bg-navy\">\n          <div>\n            <span className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"builder\" size=\"small\" inverse />\n              <span className=\"phm\">Lightning App Builder</span>\n            </span>\n            <button className=\"pam dib brs border-white text-white\">\n              <span className=\"phm\">Pages</span>\n              <Icon category=\"utility\" name=\"chevrondown\" size=\"x-small\" inverse />\n            </button>\n          </div>\n          <span className=\"pam text-white\">App Name</span>\n          <div>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"back\" size=\"x-small\" inverse />\n              <span className=\"phm\">Back</span>\n            </button>\n            <button className=\"pam dib brs border-white text-white\">\n              <Icon category=\"utility\" name=\"help\" size=\"x-small\" inverse />\n              <span className=\"phm\">Help</span>\n            </button>\n          </div>\n        </section>\n\n        <section className=\"df df-justify bg-white\">\n          <div className=\"pam\">\n            {this.renderHeaderActions()}\n            {this.renderHeaderViews()}\n          </div>\n          <div className=\"pam\">\n            {this.renderHeaderSave()}\n          </div>\n        </section>\n      </header>\n    );\n  }\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport { Button, Icon } from '@salesforce/design-system-react';\n\nimport { ALL_COMPONENTS } from '../redux/constants';\n\nclass Sidebar extends Component {\n  render() {\n    return (\n      <div\n        id=\"components-sidebar\"\n        className=\"pam bg-white bas border-gray\"\n        ref={this.props.sidebarRef}\n        tabIndex=\"-1\"\n      >\n        <h2 className=\"mbm slds-text-heading_large\">Lightning Components</h2>\n        <ul>\n          {\n            ALL_COMPONENTS.map((component, i) => {\n              return (\n                <li className=\"mbs df df-justify\" key={component.id}>\n                  <Button\n                    iconCategory={component.rightIcon.category}\n                    iconName={component.rightIcon.name}\n                    iconPosition=\"left\"\n                    label={component.label}\n                    onClick={() => {\n                      this.props.handleNewComponent(component.id)\n                    }}\n                    variant=\"base\"\n                    id={component.id}\n                  />\n                  <div>\n                    <Icon\n                      assistiveText={{ label: 'Desktop Compatible' }}\n                      category=\"utility\"\n                      name=\"desktop\"\n                      size=\"x-small\"\n                    />\n                    <Icon\n                      assistiveText={{ label: 'Mobile Compatible' }}\n                      category=\"utility\"\n                      name=\"phone_portrait\"\n                      size=\"x-small\"\n                    />\n                  </div>\n                </li>\n              )\n            })\n          }\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default Sidebar;\n","import React, { Component } from 'react';\n\nclass Properties extends Component {\n  render() {\n    return (\n      <div>\n        <h2 className=\"mbm slds-text-heading_large\">Properties</h2>\n        <img src=\"./images/stencil_inputs.png\" alt=\"stencil for fake property fields\" />\n        <img src=\"./images/stencil_formFields.png\" alt=\"stencil for fake property fields\" />\n        <img src=\"./images/stencil_formFields.png\" alt=\"stencil for fake property fields\" />\n      </div>\n    );\n  }\n}\n\nexport default Properties;\n","import React, { Component } from 'react';\nimport uniqid from 'uniqid';\n\nimport { connect } from 'react-redux';\nimport { ALL_COMPONENTS } from './redux/constants';\n\nimport { initComponents } from './initComponents';\n\nimport {\n  cloneObject,\n  getAssistiveText,\n  // getNewIndex,\n  getObjectbyKey,\n} from './helpers';\n\nimport Canvas from './components/Canvas';\nimport Header from './components/Header';\nimport Sidebar from './components/Sidebar';\nimport Properties from './components/Properties';\n\nimport './App.css';\n\nconst mapStateToProps = state => {\n  return { regions: state.regions };\n}\n\nclass ConnectedApp extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      allComponents: initComponents,\n      assistiveText: '',\n      currFocusedElement: null,\n      currFocusedRegion: null,\n      grabbedComponent: null,\n      grabbedComponentCurrRegion: null,\n      isDragDropMode: false,\n    }\n\n    this.handleNewComponent = this.handleNewComponent.bind(this);\n    this.handleKeyDown = this.handleKeyDown.bind(this);\n\n    this.headerRef = React.createRef();\n    this.sidebarRef = React.createRef();\n    this.canvasRef = React.createRef();\n    this.propertiesRef = React.createRef();\n  }\n\n  componentDidUpdate() {\n    if (this.state.currFocusedElement !== null) {\n      document.getElementById(this.state.currFocusedElement).focus();\n    }\n  }\n\n  handleNewComponent(type, region = 'header', parentId = null, panelIndex = null) {\n    // TD: should the new component init to grabbed?\n\n    // newComponent: copy of the component from constants\n    let newComponent = cloneObject(getObjectbyKey(ALL_COMPONENTS, 'id', type));\n    let updatedComponents = cloneObject(this.state.allComponents);\n    let assistiveText = getAssistiveText(type, region, 0, 1, 'added');\n\n    newComponent.id = uniqid();\n\n    if (parentId === null || panelIndex === null) {\n      updatedComponents[region].components.splice(0, 0, newComponent);\n    } else {\n      let parentComponent = getObjectbyKey(updatedComponents[region].components, 'id', parentId);\n      parentComponent.panels[panelIndex].components.splice(0, 0, newComponent);\n    }\n\n    this.setState({\n      allComponents: updatedComponents,\n      assistiveText,\n      currFocusedElement: newComponent.id,\n    });\n  }\n\n  handleKeyDown(event) {\n    if (event.key === ' ') {\n      event.preventDefault();\n      event.stopPropagation();\n\n      if (this.state.grabbedComponent === null) this.handleGrab(event);\n      else if (event.target.id === this.state.grabbedComponent.id) this.handleDrop(event);\n    } else if (this.state.isDragDropMode && event.target.id === this.state.grabbedComponent.id) {\n      if (event.key === 'ArrowRight' || event.key === 'ArrowLeft') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleMoveRegion(event);\n      } else if (event.key === 'ArrowDown' || event.key === 'ArrowUp') {\n        event.preventDefault();\n        event.stopPropagation();\n        this.handleMoveIndex(event);\n      }\n    }\n  }\n\n  handleGrab(event) {\n    if (this.state.grabbedComponent !== null) this.handleDrop(event);\n\n    const componentHTML = event.target;\n    const region = event.target.closest('section').id.substring(8);\n    let assistiveText;\n    let grabbedComponent;\n\n    if (componentHTML.hasAttribute('data-panelindex')) {\n      const panelIndex = componentHTML.getAttribute('data-panelindex');\n      const parentHTML = event.target.closest('div.parent-component');\n      const parentId = parentHTML.getAttribute('id');\n      let parentObject = getObjectbyKey(this.state.allComponents[region].components, 'id', parentId);\n      grabbedComponent = getObjectbyKey(parentObject.panels[panelIndex].components, 'id', componentHTML.id);\n\n      assistiveText = getAssistiveText(\n        componentHTML.getAttribute('data-type'),\n        region,\n        parentObject.panels[panelIndex].components.findIndex((cmp) => cmp.id === componentHTML.id),\n        parentObject.panels[panelIndex].components.length,\n        'grabbed',\n        parentHTML.getAttribute('data-type'),\n        parentObject.panels[panelIndex].name,\n      )\n    } else {\n      grabbedComponent = getObjectbyKey(this.state.allComponents[region].components, 'id', componentHTML.id);\n\n      assistiveText = getAssistiveText(\n        componentHTML.getAttribute('data-type'),\n        region,\n        this.state.allComponents[region].components.findIndex((cmp) => cmp.id === componentHTML.id),\n        this.state.allComponents[region].components.length,\n        'grabbed',\n      )\n    }\n\n    grabbedComponent.id = `floating-${grabbedComponent.value}`;\n    grabbedComponent.isGrabbed = true;\n\n    this.setState({\n      assistiveText,\n      currFocusedElement: grabbedComponent.id,\n      grabbedComponent,\n      grabbedComponentCurrRegion: region,\n      isDragDropMode: true,\n    });\n  }\n\n  handleDrop(event) {\n    let allComponents = cloneObject(this.state.allComponents);\n    let grabbedComponent = this.state.grabbedComponent;\n    let assistiveText;\n    let regionComponents;\n\n    if (event.target.hasAttribute('data-panelindex')) {\n      const panelIndex = event.target.getAttribute('data-panelindex');\n      const parentId = event.target.closest('div.parent-component').getAttribute('id');\n      const parentObject = getObjectbyKey(\n        allComponents[this.state.grabbedComponentCurrRegion].components,\n        'id',\n        parentId\n      );\n\n      regionComponents = parentObject.panels[panelIndex].components;\n\n      assistiveText = getAssistiveText(\n        grabbedComponent.value,\n        this.state.grabbedComponentCurrRegion,\n        regionComponents.findIndex((cmp) => cmp.id === grabbedComponent.id),\n        regionComponents.length,\n        'dropped',\n        parentObject.value,\n        parentObject.panels[panelIndex].name,\n      );\n    } else {\n      regionComponents = allComponents[this.state.grabbedComponentCurrRegion].components;\n      assistiveText = getAssistiveText(\n        grabbedComponent.value,\n        this.state.grabbedComponentCurrRegion,\n        regionComponents.findIndex((cmp) => cmp.id === grabbedComponent.id),\n        regionComponents.length,\n        'dropped'\n      );\n    }\n\n    let cmpInAllComponents = getObjectbyKey(regionComponents, 'id', grabbedComponent.id);\n\n    cmpInAllComponents.isGrabbed = false;\n    cmpInAllComponents.id = uniqid();\n\n    this.setState({\n      allComponents,\n      assistiveText,\n      currFocusedElement: cmpInAllComponents.id,\n      grabbedComponent: null,\n      grabbedComponentCurrRegion: null,\n      isDragDropMode: false,\n    });\n  }\n\n  handleMoveRegion(event) {\n    let allComponents = cloneObject(this.state.allComponents);\n    let grabbedComponent = cloneObject(this.state.grabbedComponent);\n    const regions = Object.keys(allComponents);\n    const currentRegionIndex = regions.findIndex((region) => region === this.state.grabbedComponentCurrRegion);\n    let componentIndex;\n    let assistiveText;\n    let newRegion;\n    let shouldRemoveOld = false;\n\n    // add the component to the new region\n    if (event.key === 'ArrowRight' && currentRegionIndex < regions.length - 1) {\n      newRegion = regions[currentRegionIndex + 1];\n      allComponents[newRegion].components.splice(0, 0, grabbedComponent);\n      shouldRemoveOld = true;\n    } else if (event.key === 'ArrowLeft' && currentRegionIndex > 0) {\n      newRegion = regions[currentRegionIndex - 1]\n      allComponents[newRegion].components.splice(0, 0, grabbedComponent);\n      shouldRemoveOld = true;\n    }\n\n    if (shouldRemoveOld) {\n      if (event.target.hasAttribute('data-panelindex')) {\n        const panelIndex = event.target.getAttribute('data-panelindex');\n        const parentId = event.target.closest('div.parent-component').getAttribute('id');\n        const parentObject = getObjectbyKey(\n          this.state.allComponents[regions[currentRegionIndex]].components,\n          'id',\n          parentId\n        );\n\n        componentIndex = parentObject.panels[panelIndex].components.findIndex((cmp) => cmp.id === grabbedComponent.id);\n        parentObject.panels[panelIndex].components.splice(componentIndex, 1);\n      } else {\n        componentIndex = allComponents[regions[currentRegionIndex]].components.findIndex((cmp) => cmp.id === grabbedComponent.id);\n        allComponents[regions[currentRegionIndex]].components.splice(componentIndex, 1);\n      }\n\n      assistiveText = getAssistiveText(\n        grabbedComponent.value,\n        newRegion,\n        0,\n        allComponents[newRegion].components.length,\n        'moved'\n      );\n\n      this.setState({\n        allComponents,\n        assistiveText,\n        grabbedComponentCurrRegion: newRegion,\n      });\n    }\n  }\n\n  handleMoveIndex(event) {\n    let allComponents = cloneObject(this.state.allComponents);\n    let grabbedComponent = cloneObject(this.state.grabbedComponent);\n    let currentComponentIndex;\n    let region;\n    let newIndex;\n    let assistiveText;\n\n    if (event.key === 'ArrowDown') {\n      if (event.target.hasAttribute('data-panelindex')) {\n        const panelIndex = parseInt(event.target.getAttribute('data-panelindex'));\n        const parentObject = getObjectbyKey(\n          allComponents[this.state.grabbedComponentCurrRegion].components,\n          'id',\n          event.target.closest('div.parent-component').getAttribute('id')\n        );\n\n        region = parentObject.panels[panelIndex].components;\n        currentComponentIndex = region.findIndex((cmp) => cmp.id === grabbedComponent.id);\n\n        if (currentComponentIndex < region.length - 1) {\n          newIndex = currentComponentIndex + 1;\n          region.splice(newIndex, 0, region.splice(currentComponentIndex, 1)[0]);\n          // (cmpType, region, index, numCmpsInRegion, action, parentType = null, panelName = null) {\n          assistiveText = getAssistiveText(\n            grabbedComponent.value,\n            parentObject.value,\n            newIndex,\n            region.length,\n            'moved',\n          );\n        } else {\n          if (panelIndex < parentObject.panels.length - 1) {\n            // TD: component moves to new panel, but it doesn't open.\n            parentObject.panels[panelIndex + 1].components.splice(\n              0, 0, region.splice(currentComponentIndex, 1)[0]\n            );\n            assistiveText = getAssistiveText(\n              grabbedComponent.value,\n              parentObject.value,\n              newIndex,\n              region.length,\n              'moved',\n            );\n          } else {\n            const newRegion = allComponents[this.state.grabbedComponentCurrRegion].components;\n            const parentIndex = newRegion.findIndex((cmp) => (\n              cmp.id === parentObject.id\n            ));\n            newRegion.splice(parentIndex + 1, 0, region.splice(currentComponentIndex, 1)[0]);\n            assistiveText = getAssistiveText(\n              grabbedComponent.value,\n              this.state.grabbedComponentCurrRegion,\n              parentIndex + 1,\n              newRegion.length,\n              'moved',\n            );\n          }\n        }\n        this.setState({\n          assistiveText,\n          allComponents,\n        });\n      } else {\n        region = allComponents[this.state.grabbedComponentCurrRegion].components;\n        currentComponentIndex = region.findIndex((cmp) => (\n          cmp.id === grabbedComponent.id\n        ));\n\n        if (currentComponentIndex < region.length - 1) {\n          newIndex = currentComponentIndex + 1;\n          if (region[newIndex].panels === undefined) {\n            region.splice(newIndex, 0, region.splice(currentComponentIndex, 1)[0]);\n          } else {\n            region[newIndex].panels[0].components.splice(0, 0, region.splice(currentComponentIndex, 1)[0]);\n          }\n\n          assistiveText = getAssistiveText(\n            grabbedComponent.value,\n            this.state.grabbedComponentCurrRegion,\n            newIndex,\n            region.length,\n            'moved',\n          );\n\n          this.setState({\n            assistiveText,\n            allComponents,\n          });\n        }\n      }\n    } else if (event.key === 'ArrowUp') {\n      if (event.target.hasAttribute('data-panelindex')) {\n        const panelIndex = parseInt(event.target.getAttribute('data-panelindex'));\n        const parentObject = getObjectbyKey(\n          allComponents[this.state.grabbedComponentCurrRegion].components,\n          'id',\n          event.target.closest('div.parent-component').getAttribute('id')\n        );\n\n        region = parentObject.panels[panelIndex].components;\n        currentComponentIndex = region.findIndex((cmp) => cmp.id === grabbedComponent.id);\n\n        if (currentComponentIndex > 0) {\n          newIndex = currentComponentIndex - 1;\n          region.splice(newIndex, 0, region.splice(currentComponentIndex, 1)[0]);\n          assistiveText = getAssistiveText(\n            grabbedComponent.value,\n            parentObject.value,\n            newIndex,\n            region.length,\n            'moved',\n          );\n        } else {\n          if (panelIndex > 0) {\n            // TD: component moves to new panel, but it doesn't open.\n            parentObject.panels[panelIndex - 1].components.splice(\n              0, 0, region.splice(currentComponentIndex, 1)[0]\n            );\n            assistiveText = getAssistiveText(\n              grabbedComponent.value,\n              parentObject.value,\n              newIndex,\n              region.length,\n              'moved',\n            );\n          } else {\n            const newRegion = allComponents[this.state.grabbedComponentCurrRegion].components;\n            const parentIndex = newRegion.findIndex((cmp) => (\n              cmp.id === parentObject.id\n            ));\n            newRegion.splice(parentIndex - 1, 0, region.splice(currentComponentIndex, 1)[0]);\n            assistiveText = getAssistiveText(\n              grabbedComponent.value,\n              this.state.grabbedComponentCurrRegion,\n              parentIndex - 1,\n              newRegion.length,\n              'moved',\n            );\n          }\n        }\n        this.setState({\n          assistiveText,\n          allComponents,\n        });\n      } else {\n        region = allComponents[this.state.grabbedComponentCurrRegion].components;\n        currentComponentIndex = region.findIndex((cmp) => (\n          cmp.id === grabbedComponent.id\n        ));\n\n        if (currentComponentIndex > 0) {\n          newIndex = currentComponentIndex - 1;\n          if (region[newIndex].panels === undefined) {\n            region.splice(newIndex, 0, region.splice(currentComponentIndex, 1)[0]);\n          } else {\n            let newPanel = region[newIndex].panels[region[newIndex].panels.length - 1];\n            newPanel.components.splice(\n              0, 0, region.splice(currentComponentIndex, 1)[0]\n            );\n          }\n\n          assistiveText = getAssistiveText(\n            grabbedComponent.value,\n            this.state.grabbedComponentCurrRegion,\n            newIndex,\n            region.length,\n            'moved',\n          );\n\n          this.setState({\n            assistiveText,\n            allComponents,\n          });\n        }\n      }\n    }\n  }\n\n  handleF6 = (event) => {\n    if (event.key === 'F6') {\n      switch (this.state.currFocusedRegion) {\n        case null:\n          this.headerRef.current.focus();\n          this.setState({ currFocusedRegion: 'HEADER' })\n          break;\n        case 'HEADER':\n          this.sidebarRef.current.focus();\n          this.setState({ currFocusedRegion: 'COMPONENT_PANEL' })\n          break;\n        case 'COMPONENT_PANEL':\n          this.canvasRef.current.focus();\n          this.setState({ currFocusedRegion: 'CANVAS' })\n          break;\n        case 'CANVAS':\n          this.propertiesRef.current.focus();\n          this.setState({ currFocusedRegion: 'PROPERTY_PANEL' })\n          break;\n        case 'PROPERTY_PANEL':\n          this.headerRef.current.focus();\n          this.setState({ currFocusedRegion: 'HEADER' })\n          break;\n        default:\n          console.log('error');\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App ht-full dg app-grid bg-gray\" onKeyDown={this.handleF6}>\n        <div aria-live=\"assertive\" className=\"pam slds-text-heading_large bg-navy text-white\">\n          {this.state.assistiveText}\n        </div>\n        <Header headerRef={this.headerRef} />\n        <main className=\"dg main-grid dg-stretch\">\n          <Sidebar handleNewComponent={this.handleNewComponent} sidebarRef={this.sidebarRef} />\n          <Canvas\n            data={this.state.allComponents}\n            // addComponent={this.addComponent}\n            isDragDropMode={this.state.isDragDropMode}\n            handleKeyDown={this.handleKeyDown}\n            handleNewComponent={this.handleNewComponent}\n            // canvasRegions={this.props.canvasRegions}\n            // handleStartDrag={this.handleStartDrag}\n            canvasRef={this.canvasRef}\n          />\n          <div id=\"properties-sidebar\" className=\"pam bg-white bas border-gray\" ref={this.propertiesRef} tabIndex=\"-1\">\n            <Properties />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\n// connects react component to the redux store\nconst App = connect(mapStateToProps, null)(ConnectedApp);\nexport default App;\n","import React from 'react';\nimport { render } from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nimport App from './App';\n// import rootReducer from './redux/reducers';\nimport { IconSettings } from '@salesforce/design-system-react';\n\nrender(\n  <Provider store={store}>\n    <IconSettings iconPath=\"icons\">\n      <App />\n    </IconSettings>\n  </Provider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}